rota2$year[grep(y,rota2$note)] <- paste(y) # if a range is given, it will take the END year
rota2$year[grep(y,rota2$host)] <- paste(y)
rota2$year[grep(y,rota2$collection_date)] <- paste(y)
y=y+1
}
#table(rota2$year)
# month
rota2$month <- "XX"
rota2$month[grep("Jan",ignore.case = TRUE,rota2$collection_date)]<- "01"
rota2$month[grep("Feb",ignore.case = TRUE,rota2$collection_date)]<- "02"
rota2$month[grep("Mar",ignore.case = TRUE,rota2$collection_date)]<- "03"
rota2$month[grep("Apr",ignore.case = TRUE,rota2$collection_date)]<- "04"
rota2$month[grep("May",ignore.case = TRUE,rota2$collection_date)]<- "05"
rota2$month[grep("Jun",ignore.case = TRUE,rota2$collection_date)]<- "06"
rota2$month[grep("Jul",ignore.case = TRUE,rota2$collection_date)]<- "07"
rota2$month[grep("Aug",ignore.case = TRUE,rota2$collection_date)]<- "08"
rota2$month[grep("Sep",ignore.case = TRUE,rota2$collection_date)]<- "09"
rota2$month[grep("Oct",ignore.case = TRUE,rota2$collection_date)]<- "10"
rota2$month[grep("Nov",ignore.case = TRUE,rota2$collection_date)]<- "11"
rota2$month[grep("Dec",ignore.case = TRUE,rota2$collection_date)]<- "12"
rota2$month[grep("^\\d{4}-01",rota2$collection_date)]<- "01"
rota2$month[grep("^\\d{4}-02",rota2$collection_date)]<- "02"
rota2$month[grep("^\\d{4}-03",rota2$collection_date)]<- "03"
rota2$month[grep("^\\d{4}-04",rota2$collection_date)]<- "04"
rota2$month[grep("^\\d{4}-05",rota2$collection_date)]<- "05"
rota2$month[grep("^\\d{4}-06",rota2$collection_date)]<- "06"
rota2$month[grep("^\\d{4}-07",rota2$collection_date)]<- "07"
rota2$month[grep("^\\d{4}-08",rota2$collection_date)]<- "08"
rota2$month[grep("^\\d{4}-09",rota2$collection_date)]<- "09"
rota2$month[grep("^\\d{4}-10",rota2$collection_date)]<- "10"
rota2$month[grep("^\\d{4}-11",rota2$collection_date)]<- "11"
rota2$month[grep("^\\d{4}-12",rota2$collection_date)]<- "12"
#no month found in $note (except when given as a range) or $organism
#table(rota2$month)
# date
# check for 2 formats
# table(rota2$collection_date[grep("^\\d{4}-\\d{2}-",rota2$collection_date)])
# table(rota2$collection_date[grep("^\\d{2}-",rota2$collection_date)])
# test
# table(rota2$collection_date[grep(paste("^",date2,"-",sep=""),rota2$collection_date)])
# table(rota2$collection_date[grep(paste("^\\d{4}-\\d{2}-",date2,sep=""),rota2$collection_date)])
rota2$date <- "XX"
date1 <- 1
while (date1 < 32)
{
date2 <- formatC(date1,width=2, flag="0")
rota2$date[grep(paste("^",date2,"-",sep=""),rota2$collection_date)]<- paste(date2)
rota2$date[grep(paste("^\\d{4}-\\d{2}-",date2,sep=""),rota2$collection_date)]<- paste(date2)
date1 = date1 + 1
}
#table(rota2$date)
# combining year, month, date to yyyy-mm-dd format (http://www.statmethods.net/input/dates.html)
#EXAMPLE: mydates<-as.Date(rota2$collection_date2,"%Y-%m-%d")
rota2$collection_date2<-paste(rota2$year,"-",rota2$month,"-",rota2$date,sep="")
rota2$collection_date2[grep("XXXX-XX-XX",rota2$collection_date2)]<- "NULL"
# SEGMENT ####
# copying existing valid fields
seg = 1
while (seg < 12)
{
rota2$segment2[grep(paste("^",seg,"$",sep=""),rota2$segment)]<- paste(seg)
rota2$segment2[grep(paste("RNA"," ",seg,"$",sep=""),rota2$segment)]<- paste(seg)
rota2$segment2[grep(paste("RNA",seg,"$",sep=""),rota2$segment)]<- paste(seg)
rota2$segment2[grep(paste("VP",seg,"$",sep=""),rota2$segment)]<- paste(seg)
seg = seg + 1
}
# excluded rearranged seg 11 and R suffixes; 26136 sequences with no segment data
# looking from $chromosome, $map, $isolate
chr=1
while (chr < 12)
{
#rota2$segment2[grep(paste("egment"," ",chr," ",sep=""),rota2$chromosome)]<- paste(chr)
rota2$segment2[grep(paste("egment"," ",chr,"$",sep=""),rota2$chromosome)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr," ",sep=""),rota2$chromosome)]<- paste(chr) # no new additions
#rota2$segment2[grep(paste("VP"," ",chr,"$",sep=""),rota2$chromosome)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr," ",sep=""),rota2$chromosome)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr,"$",sep=""),rota2$chromosome)]<- paste(chr)
#rota2$segment2[grep(paste("egment"," ",chr," ",sep=""),rota2$map)]<- paste(chr)
rota2$segment2[grep(paste("egment"," ", chr,"$",sep=""),rota2$map)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr," ",sep=""),rota2$map)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr,"$",sep=""),rota2$map)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr," ",sep=""),rota2$map)]<- paste(chr)
rota2$segment2[grep(paste("VP",chr,"$",sep=""),rota2$map)]<- paste(chr)
#rota2$segment2[grep(paste("egment"," ", chr," ",sep=""),rota2$isolate)]<- paste(chr)
rota2$segment2[grep(paste("egment"," ", chr,"$",sep=""),rota2$isolate)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr," ",sep=""),rota2$isolate)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr,"$",sep=""),rota2$isolate)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr," ",sep=""),rota2$isolate)]<- paste(chr)
rota2$segment2[grep(paste("VP",chr,"$",sep=""),rota2$isolate)]<- paste(chr)
rota2$segment2[grep(paste("\\(\\VP",chr,sep=""),rota2$isolate)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr," ",sep=""),rota2$note)]<- paste(chr) # not good criteria, same with "egment"
#rota2$segment2[grep(paste("VP"," ",chr,"$",sep=""),rota2$note)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr," ",sep=""),rota2$note)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr,"$",sep=""),rota2$note)]<- paste(chr)
chr = chr + 1
}
table(rota2$segment2)
# SPECIES ####
# A to H
# data in $organism, $note, $serogroup
sp = 1
while (sp < 9)
{
rota2$organism2[grep(paste("virus"," ",LETTERS[sp]," ", sep=""),rota2$organism)] <- paste(LETTERS[sp])
rota2$organism2[grep(paste("virus"," ",LETTERS[sp],"$", sep=""),rota2$organism)] <- paste(LETTERS[sp])
rota2$organism2[grep(paste("virus"," ",LETTERS[sp]," ", sep=""),rota2$note)] <- paste(LETTERS[sp])
rota2$organism2[grep(paste("virus"," ",LETTERS[sp],"$", sep=""),rota2$note)] <- paste(LETTERS[sp])
rota2$organism2[grep(paste("virus"," ",LETTERS[sp]," ", sep=""),rota2$serogroup)] <- paste(LETTERS[sp])
rota2$organism2[grep(paste("virus"," ",LETTERS[sp],"$", sep=""),rota2$serogroup)] <- paste(LETTERS[sp])
sp = sp + 1
}
# STRAIN ####
# serotypes come in either P, G or a mixture of both (http://onlinelibrary.wiley.com/doi/10.1002/rmv.448/epdf)
# VP7 determines the G-type strain of the virus (glycoprotein); VP4 serotype is designated as P (protease)
# G and P antigens segregate independently
# 14 (or 15) rotavirus G serotypes and 11 (or 14) rotavirus P serotypes (2011; http://www.jhpn.net/index.php/jhpn/article/viewFile/33/22)
# data in $serotype, $organism, $strain
# to check: P1: serotype; P[1]: genotype?? genotypes for P = 23, serotypes for P = 14; way more in data
# G only
str = 1
while (str < 16)
{
rota2$strain2[grep(paste("G",str,"$",sep=""),rota2$strain)]<- paste("G",str,"P[X]",sep="")
rota2$strain2[grep(paste("G",str,"_",sep=""),rota2$strain)]<- paste("G",str,"P[X]",sep="")
rota2$strain2[grep(paste("^G",str,"$",sep=""),rota2$serotype)]<- paste("G",str,"P[X]",sep="")
str = str + 1
}
# GXP[X]
rota2$strain2[grep(paste("GXP[X]"),rota2$strain, fixed = TRUE)] <- paste("GXP[X]")
rota2$strain2[grep(paste("P[X]GX"),rota2$strain, fixed = TRUE)] <- paste("GXP[X]")
rota2$strain2[grep(paste("GXP[X]"),rota2$serotype, fixed = TRUE)] <- paste("GXP[X]")
rota2$strain2[grep(paste("P[X]GX"),rota2$serotype, fixed = TRUE)] <- paste("GXP[X]")
rota2$strain2[grep(paste("GXP[X]"),rota2$serogroup, fixed = TRUE)] <- paste("GXP[X]")
rota2$strain2[grep(paste("P[X]GX"),rota2$serogroup, fixed = TRUE)] <- paste("GXP[X]")
# G and P combinations
g=1
p=1
while (g < 16)
{
while (p < 30)
{
rota2$strain2[grep(paste("G",g,"P",p,sep=""),rota2$strain)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G",g,"P","[",p,sep=""),rota2$strain, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G",g,sep=""),rota2$strain)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G",g,sep=""),rota2$strain, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P",p,sep=""),rota2$strain)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P","[",p,sep=""),rota2$strain, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G","X",sep=""),rota2$strain)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G","X",sep=""),rota2$strain, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("G",g,"P",p,sep=""),rota2$serotype)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G",g,"P","[",p,sep=""),rota2$serotype, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G",g,sep=""),rota2$serotype)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G",g,sep=""),rota2$serotype, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P",p,sep=""),rota2$serotype)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P","[",p,sep=""),rota2$serotype, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G","X",sep=""),rota2$serotype)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G","X",sep=""),rota2$serotype, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("G",g,"P",p,sep=""),rota2$serogroup)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G",g,"P","[",p,sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G",g,sep=""),rota2$serogroup)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G",g,sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P",p,sep=""),rota2$serogroup)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P","[",p,sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G","X",sep=""),rota2$serogroup)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G","X",sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
p = p + 1
}
rota2$strain2[grep(paste("G",g,"P","X",sep=""),rota2$strain)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("G",g,"P","[","X",sep=""),rota2$strain, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","X","G",g,sep=""),rota2$strain)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","[","X","]","G",g,sep=""),rota2$strain, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("G",g,"P","X",sep=""),rota2$serotype)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("G",g,"P","[","X",sep=""),rota2$serotype, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","X","G",g,sep=""),rota2$serotype)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","[","X","]","G",g,sep=""),rota2$serotype, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("G",g,"P","X",sep=""),rota2$serogroup)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("G",g,"P","[","X",sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","X","G",g,sep=""),rota2$serogroup)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","[","X","]","G",g,sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
p = 1 #reinitialize
g = g + 1
print (paste("nested loop:", g/16*100,"percent complete"))
}
#double digits (egG1P[11]) will overwrite single digits (G1P[1]) later
# identify mixed strains
rota2$strain2[grep("ix",rota2$strain)] <- paste("Mixed Genotype",sep="")
# SUMMARY TABLES ####
table(rota2$host2)
table(rota2$country2)
table(rota2$collection_date2)
table(rota2$segment2)
table(rota2$strain2)
table(rota2$organism2)
# SEQUENCE DATA ####
rota.seq <- read.dna("rota_sequences.fas",format="fasta",as.matrix=FALSE) #as.matrix = FALSE: always returns the sequences in a list.
# rota.seq <- read.dna("rota_sequences.fas",format="fasta",as.matrix=NULL)
match(names(rota.seq),rota2$accession)
rota2$newlabel <- paste(rota2$accession,rota2$host2, rota2$country2, rota2$collection_date2, "Rotavirus", rota2$organism2, "Strain", rota2$strain2, "Segment", rota2$segment2, sep="_")
i=1
while (i<10)
{
names(rota.seq)[i] <- rota2$newlabel[i]
i = i + 1
}
setwd("C:/Users/Qian Cheng/Desktop/Part II Project/R Munge/rotavirus/Data Munging")
load("C:/Users/Qian Cheng/Desktop/Part II Project/R Munge/rotavirus/Data Munging/.RData")
install.packages("seqinr")
#Initialize
library(ape)
library(ade4)
library(seqinr)
#Read FASTA
rota_all.seq <- read.dna("rota_annotated_v2.fas",format="fasta",as.matrix=FALSE)
summary(rota_all.seq)
summary(rota_all.seq[[1]])  # first sequence
summary(rota_all.seq[1])$length  # length of first sequence
summary(rota_all.seq[[1]])$length
summary$length(rota_all.seq[[1]])
summary(rota_all.seq[[1]])$Length
summary$Length(rota_all.seq[1])
names(rota_all.seq[1])
getLength(rota_all.seq[1]) #length of first sequence
getAnnot(rota_all.seq)
rota_all.seq <- read.dna("rota_annotated_v2.fas",format="fasta")
getAnnot(rota_all.seq)
rota_all.seq <- read.fasta("rota_annotated_v2.fas")
summary(rota_all.seq)
summary(rota_all.seq[1])
names(rota_all.seq[1])
summary(rota_all.seq[1])$length
summary$length(rota_all.seq[1])
getAnnot(rota_all.seq[1])
getLength(rota_all.seq[1])
getKeyword(rota_all.seq[1])
grep("Segment_9",getAnnot(rota_all.seq[1]))
grep("Segment_9",getAnnot(rota_all.seq))
a=1
print("a",a)
print(paste("a",a))
grep("Segment_1",getAnnot(rota_all.seq)
grep("Segment_9",getAnnot(rota_all.seq))
grep("Segment_1",getAnnot(rota_all.seq))
rotaseg1.seq <- rota_all.seq[grep("Segment_1",getAnnot(rota_all.seq))]
write.dna(rotaseg1.seq, "rotaseg1.fas", format = "fasta")
grep("Segment_1$",getAnnot(rota_all.seq))
i=1;
while (i<12)
{
print(paste("Writing FASTA file for segment",i))
segment.seq <- ""
segment.seq <- rota_all.seq[grep("Segment_1$",getAnnot(rota_all.seq))];
write.dna(segment.seq, paste("rotaseg1.fas",i,sep=""), format = "fasta");
i = i + 1;
}
i=1
grep(paste("Segment_",i,sep=""),getAnnot(rota_all.seq))
while (i<12)
{
print(paste("Writing FASTA file for segment",i))
segment.seq <- ""
segment.seq <- rota_all.seq[grep(paste("Segment_",i,"$",sep=""),getAnnot(rota_all.seq))];
write.dna(segment.seq, paste("rotaseg1.fas",i,sep=""), format = "fasta");
i = i + 1;
}
i=1;
while (i<12)
{
print(paste("Writing FASTA file for segment",i))
segment.seq <- ""
segment.seq <- rota_all.seq[grep(paste("Segment_",i,"$",sep=""),getAnnot(rota_all.seq))];
write.dna(segment.seq, paste("rotaseg",i,".fas",sep=""), format = "fasta");
i = i + 1;
}
print("sequences separated into FASTA files by segment number")
grep("Segment_12",getAnnot(rota_all.seq))
summary(segment.seq)
rota_all.seq
summary(rota_all.seq)
rota_all.seq <- read.dna("rota_annotated_v2",format="fasta",as.matrix=FALSE)
rota_all.seq <- read.dna("rota_annotated_v2.fas",format="fasta",as.matrix=FALSE)
summary(rota_all.seq)
grep("Segment_9",getAnnot(rota_all.seq))
grep("Segment_9",names(rota_all.seq))
#Initialize
library(ape)
library(ade4)
library(seqinr)
#Read FASTA
# rota_all.seq <- read.fasta("rota_annotated_v2.fas"); # doesnt read spaces in names
rota_all.seq <- read.dna("rota_annotated_v2.fas",format="fasta",as.matrix=FALSE)
# summary(rota_all.seq)
# Test Commands
# summary(rota_all.seq[1])  # first sequence
# names(rota_all.seq[1]) # name of first sequence
# getAnnot(rota_all.seq[1]) # name of first sequence
# getLength(rota_all.seq[1]) # length of first sequence
# rota_long.seq <- rota_all.seq[which(getLength(rota_all.seq)>100)]
# grep("Segment_9",getAnnot(rota_all.seq)) #getAnnot() only works with read.fasta
# grep("Segment_9",names(rota_all.seq)) #works with read.dna
# Create FASTA files by Segment
i=1;
while (i<12)
{
print(paste("Writing FASTA file for segment",i))
segment.seq <- ""
segment.seq <- rota_all.seq[grep(paste("Segment_",i,"$",sep=""),names(rota_all.seq))];
write.dna(segment.seq, paste("rotaseg",i,".fas",sep=""), format = "fasta");
i = i + 1;
}
print("all sequences separated into FASTA files by segment number")
segment.seq
names(segment.seq)
summary(segment.seq)
segment.seq
segment.seq <- rota_all.seq[grep(paste("Segment_",1,"$",sep=""),names(rota_all.seq))]
segment.seq
#Initialize
library(ape)
library(ade4)
library(seqinr)
#Read FASTA
rota1.seq <- read.dna("rotaseg1.fas",format="fasta",as.matrix=FALSE)
rota2.seq <- read.dna("rotaseg2.fas",format="fasta",as.matrix=FALSE)
rota3.seq <- read.dna("rotaseg3.fas",format="fasta",as.matrix=FALSE)
rota4.seq <- read.dna("rotaseg4.fas",format="fasta",as.matrix=FALSE)
rota5.seq <- read.dna("rotaseg5.fas",format="fasta",as.matrix=FALSE)
rota6.seq <- read.dna("rotaseg6.fas",format="fasta",as.matrix=FALSE)
rota7.seq <- read.dna("rotaseg7.fas",format="fasta",as.matrix=FALSE)
rota8.seq <- read.dna("rotaseg8.fas",format="fasta",as.matrix=FALSE)
rota9.seq <- read.dna("rotaseg9.fas",format="fasta",as.matrix=FALSE)
rota10.seq <- read.dna("rotaseg10.fas",format="fasta",as.matrix=FALSE)
rota11.seq <- read.dna("rotaseg11.fas",format="fasta",as.matrix=FALSE)
#Read FASTA
rota1.seq <- read.dna("rotaseg1.fas",format="fasta",as.matrix=FALSE)
rota2.seq <- read.dna("rotaseg2.fas",format="fasta",as.matrix=FALSE)
rota3.seq <- read.dna("rotaseg3.fas",format="fasta",as.matrix=FALSE)
rota4.seq <- read.dna("rotaseg4.fas",format="fasta",as.matrix=FALSE)
rota5.seq <- read.dna("rotaseg5.fas",format="fasta",as.matrix=FALSE)
rota6.seq <- read.dna("rotaseg6.fas",format="fasta",as.matrix=FALSE)
rota7.seq <- read.dna("rotaseg7.fas",format="fasta",as.matrix=FALSE)
rota8.seq <- read.dna("rotaseg8.fas",format="fasta",as.matrix=FALSE)
rota9.seq <- read.dna("rotaseg9.fas",format="fasta",as.matrix=FALSE)
rota10.seq <- read.dna("rotaseg10.fas",format="fasta",as.matrix=FALSE)
rota11.seq <- read.dna("rotaseg11.fas",format="fasta",as.matrix=FALSE)
grep(paste("Rotavirus",LETTERS[i],sep="_"),names(rota1.seq))
paste("Rotavirus",LETTERS[i],sep="_")
i=1
paste("Rotavirus",LETTERS[i],sep="_")
grep(paste("Rotavirus",LETTERS[i],sep="_"),names(rota1.seq))
i=1;
print("separating sequences for segment 1")
while (i<9)
{
print(paste("Writing FASTA file for species",LETTERS[i]))
species.seq <- ""
species.seq <- rota1.seq[grep(paste("Rotavirus",LETTERS[i],sep="_"),names(rota1.seq))];
write.dna(species.seq, paste("rota1sp",LETTERS[i],".fas",sep=""), format = "fasta");
i = i + 1;
}
print("all sequences separated into FASTA files by species for segment 1")
species.seq <- "NULL"
species.seq
i=1;
print("separating sequences for segment 1")
while (i<9)
{
print(paste("Writing FASTA file for species",LETTERS[i]))
species.seq <- ">NO ENTRY"
species.seq <- rota1.seq[grep(paste("Rotavirus",LETTERS[i],sep="_"),names(rota1.seq))];
write.dna(species.seq, paste("rota1sp",LETTERS[i],".fas",sep=""), format = "fasta");
i = i + 1;
}
grep(paste("Rotavirus",LETTERS[i],sep="_"),names(rota1.seq))
I
i
i=1;
print("separating sequences for segment 1")
while (i<9)
tryCatch({ #use tryCatch to skip errors with species with no entries
print(paste("Writing FASTA file for species",LETTERS[i]))
species.seq <- ""
species.seq <- rota1.seq[grep(paste("Rotavirus",LETTERS[i],sep="_"),names(rota1.seq))];
write.dna(species.seq, paste("rota1sp",LETTERS[i],".fas",sep=""), format = "fasta");
i = i + 1;
}, error=function(e){})
i=0
print("separating sequences for segment 1")
while (i<9)
tryCatch({ #use tryCatch to skip errors with species with no entries
print(paste("Writing FASTA file for species",LETTERS[i]))
i = i + 1
species.seq <- ""
species.seq <- rota1.seq[grep(paste("Rotavirus",LETTERS[i],sep="_"),names(rota1.seq))];
write.dna(species.seq, paste("rota1sp",LETTERS[i],".fas",sep=""), format = "fasta");
}, error=function(e){})
print("all sequences separated into FASTA files by species for segment 1")
i=0
print("separating sequences for segment 1")
while (i<9)
tryCatch({ #use tryCatch to skip errors with species with no entries
i = i + 1
print(paste("Writing FASTA file for species",LETTERS[i]))
species.seq <- ""
species.seq <- rota1.seq[grep(paste("Rotavirus",LETTERS[i],sep="_"),names(rota1.seq))];
write.dna(species.seq, paste("rota1sp",LETTERS[i],".fas",sep=""), format = "fasta");
}, error=function(e){})
print("all sequences separated into FASTA files by species for segment 1")
i=0
print("separating sequences for segment 1")
while (i<9)
tryCatch({ #using tryCatch to skip errors with species with no entries
i = i + 1
print(paste("Writing FASTA file for species",LETTERS[i]))
species.seq <- ""
species.seq <- rota1.seq[grep(paste("Rotavirus",LETTERS[i],sep="_"),names(rota1.seq))];
write.dna(species.seq, paste("rota1sp",LETTERS[i],".fas",sep=""), format = "fasta");
}, error=function(e){cat("ERROR: no entry found for species",LETTERS[i], "\n")})
print("all sequences separated into FASTA files by species for segment 1")
paste("rota","1",".seq",sep="")
rotasegments[1] <- read.dna("rotaseg1.fas",format="fasta",as.matrix=FALSE)
rotasegments[1] <- read.dna("rotaseg1.fas",format="fasta",as.matrix=FALSE)
rotasegments <- ""
rotasegments[1] <- read.dna("rotaseg1.fas",format="fasta",as.matrix=FALSE)
rota1 <- read.dna("rotaseg1.fas",format="fasta",as.matrix=FALSE)
rota2 <- read.dna("rotaseg2.fas",format="fasta",as.matrix=FALSE)
rota3 <- read.dna("rotaseg3.fas",format="fasta",as.matrix=FALSE)
rota5 <- read.dna("rotaseg4.fas",format="fasta",as.matrix=FALSE)
rota5 <- read.dna("rotaseg5.fas",format="fasta",as.matrix=FALSE)
rota6 <- read.dna("rotaseg6.fas",format="fasta",as.matrix=FALSE)
rota7 <- read.dna("rotaseg7.fas",format="fasta",as.matrix=FALSE)
rota8 <- read.dna("rotaseg8.fas",format="fasta",as.matrix=FALSE)
rota9 <- read.dna("rotaseg9.fas",format="fasta",as.matrix=FALSE)
rota10 <- read.dna("rotaseg10.fas",format="fasta",as.matrix=FALSE)
rota11 <- read.dna("rotaseg11.fas",format="fasta",as.matrix=FALSE)
rotatest = rota1
rotatest
{
name <- paste("rota", i, "sp",sep = "")
assign(currentsegment, currentsegment)
print(currentsegment)
}
currentsegment <-""
s=1
for(s in 1:11)
{
name <- paste("rota", i, "sp",sep = "")
assign(currentsegment, currentsegment)
print(currentsegment)
}
s=1
for(s in 1:11)
{
name <- paste("rota", i, "sp",sep = "")
assign(currentsegment, name)
print(currentsegment)
}
s=1
for(s in 1:11)
{
name <- paste("rota", s, "sp",sep = "")
assign(currentsegment, name)
print(currentsegment)
}
name
assign(currentsegment, name)
s=1
for(s in 1:11)
{
name <- paste("rota", s,sep = "")
assign(currentsegment, name)
print(currentsegment)
}
name
assign(currentsegment, name)
s=1
for(s in 1:11)
{
name <- paste("rota", s,sep = "")
assign(name,currensegment)
print(currentsegment)
}
s=1
for(s in 1:11)
{
name <- paste("rota", s,sep = "")
assign(name,currentsegment)
print(currentsegment)
}
name
currentsegment
s=1
for(s in 1:11)
{
assign(paste("rota", s,sep = ""),currentsegment)
print(currentsegment)
}
i=0
# s=0
# currentsegment <-""
# for (s in 1:11)
# {
# print("separating sequences for segment", s)
while (i<9)
tryCatch({ #using tryCatch to skip errors with species with no entries
i = i + 1
print(paste("Writing FASTA file for species",LETTERS[i]))
species.seq <- ""
species.seq <- rota1[grep(paste("Rotavirus",LETTERS[i],sep="_"),names(rota1))];
write.dna(species.seq, paste("rota1sp",LETTERS[i],".fas",sep=""), format = "fasta");
}, error=function(e){cat("ERROR: No entry found for species",LETTERS[i], "\n")})
print("all sequences separated into FASTA files by species for segment 1")
#Segment
