rota2$country2[grep("ngola",rota2$country)] <- "Angola"
# Argentina
rota2$country2[grep("rgentina",rota2$country)] <- "Argentina"
# Australia
rota2$country2[grep("ustralia",rota2$country)] <- "Australia"
# Bangladesh
rota2$country2[grep("desh",rota2$country)] <- "Bangladesh"
# Barbados
rota2$country2[grep("arbados",rota2$country)] <- "Barbados"
# Belarus
rota2$country2[grep("elarus",rota2$country)] <- "Belarus"
# Belgium
rota2$country2[grep("elgium",rota2$country)] <- "Belgium"
# Bhutan
rota2$country2[grep("hutan",rota2$country)] <- "Bhutan"
# Botswana
rota2$country2[grep("otswana",rota2$country)] <- "Botswana"
# Brazil
rota2$country2[grep("razil",rota2$country)] <- "Brazil"
rota2$country2[grep("razil",rota2$organism)] <- "Brazil"
# Bulgaria
rota2$country2[grep("ulgaria",rota2$country)] <- "Bulgaria"
# Burkina Faso
rota2$country2[grep("urkina",rota2$country)] <- "Burkina Faso"
# Cambodia
rota2$country2[grep("ambodia",rota2$country)] <- "Cambodia"
# Cameroon
rota2$country2[grep("ameroon",rota2$country)] <- "Cameroon"
# Canada
rota2$country2[grep("anada",rota2$country)] <- "Canada"
# Chile
rota2$country2[grep("ile",rota2$country)] <- "Chile"
# China
rota2$country2[grep("hina",rota2$country)] <- "China"
rota2$country2[grep("Kong",rota2$country)] <- "China"
rota2$country2[grep("HKG",rota2$organism)] <- "China"
rota2$country2[grep("CN/",rota2$organism)] <- "China"
# Colombia
rota2$country2[grep("olombia",rota2$country)] <- "Colombia"
# Congo
rota2$country2[grep("ongo",rota2$country)] <- "Congo"
# Costa Rica
rota2$country2[grep("osta",rota2$country)] <- "Costa Rica"
# Cote d'Ivoire
rota2$country2[grep("ote",rota2$country)] <- "Cote d'Ivoire"
# Croatia
rota2$country2[grep("atia",rota2$country)] <- "Croatia"
# Cuba
rota2$country2[grep("uba",rota2$country)] <- "Cuba"
# Czech Republic
rota2$country2[grep("zech",rota2$country)] <- "Czech Republic"
# Denmark
rota2$country2[grep("enmark",rota2$country)] <- "Denmark"
# Ecuador
rota2$country2[grep("cuador",rota2$country)] <- "Ecuador"
# Egypt
rota2$country2[grep("gypt",rota2$country)] <- "Egypt"
# Ethiopia
rota2$country2[grep("thiopia",rota2$country)] <- "Ethiopia"
# Finland
rota2$country2[grep("inland",rota2$country)] <- "Finland"
# France
rota2$country2[grep("rance",rota2$country)] <- "France"
# Gabon
rota2$country2[grep("abon",rota2$country)] <- "Gabon"
# Gambia
rota2$country2[grep("Gambia",rota2$country)] <- "Gambia"
# Germany
rota2$country2[grep("ermany",rota2$country)] <- "Germany"
# Ghana
rota2$country2[grep("hana",rota2$country)] <- "Ghana"
# Greece
rota2$country2[grep("reece",rota2$country)] <- "Greece"
# Guatemala
rota2$country2[grep("uatemala",rota2$country)] <- "Guatemala"
# Guinea-Bissau
rota2$country2[grep("issau",rota2$country)] <- "Guinea-Bissau"
# Honduras
rota2$country2[grep("onduras",rota2$country)] <- "Honduras"
# Hungary
rota2$country2[grep("ungary",rota2$country)] <- "Hungary"
# India
rota2$country2[grep("ndia",rota2$country)] <- "India"
rota2$country2[grep("ndia",rota2$strain)] <- "India"
# Indonesia
rota2$country2[grep("ndonesia",rota2$country)] <- "Indonesia"
# Iran
rota2$country2[grep("Iran",rota2$country)] <- "Iran"
# Iraq
rota2$country2[grep("raq",rota2$country)] <- "Iraq"
# Israel
rota2$country2[grep("srael",rota2$country)] <- "Israel"
# Italy
rota2$country2[grep("taly",rota2$country)] <- "Italy"
# Japan
rota2$country2[grep("apan",rota2$country)] <- "Japan"
rota2$country2[grep("apan",rota2$note)] <- "Japan"
rota2$country2[grep("okyo",rota2$note)] <- "Japan"
# Jordan
rota2$country2[grep("ordan",rota2$country)] <- "Jordan"
# Kenya
rota2$country2[grep("enya",rota2$country)] <- "Kenya"
rota2$country2[grep("enya",rota2$organism)] <- "Kenya"
# Kuwait
rota2$country2[grep("uwait",rota2$country)] <- "Kuwait"
# Libya
rota2$country2[grep("ibya",rota2$country)] <- "Libya"
# Madagascar
rota2$country2[grep("adagascar",rota2$country)] <- "Madagascar"
# Malawi
rota2$country2[grep("alawi",rota2$country)] <- "Malawi"
# Malaysia
rota2$country2[grep("alaysia",rota2$country)] <- "Malaysia"
# Mali
rota2$country2[grep("Mali",rota2$country)] <- "Mali"
# Mauritius
rota2$country2[grep("auritius",rota2$country)] <- "Mauritius"
# Mexico
rota2$country2[grep("exico",rota2$country)] <- "Mexico"
# Morocco
rota2$country2[grep("orocco",rota2$country)] <- "Morocco"
# Myanmar
rota2$country2[grep("yanmar",rota2$country)] <- "Myanmar"
# Nepal
rota2$country2[grep("epal",rota2$country)] <- "Nepal"
# Netherlands
rota2$country2[grep("etherlands",rota2$country)] <- "Netherlands"
# New Zealand
rota2$country2[grep("ealand",rota2$country)] <- "New Zealand"
# Nicaragua
rota2$country2[grep("icaragua",rota2$country)] <- "Nicaragua"
# Nigeria
rota2$country2[grep("igeria",rota2$country)] <- "Nigeria"
# Oman
rota2$country2[grep("Oman",rota2$country)] <- "Oman"
# Pakistan
rota2$country2[grep("akistan",rota2$country)] <- "Pakistan"
# Paraguay
rota2$country2[grep("araguay",rota2$country)] <- "Paraguay"
# Peru
rota2$country2[grep("Peru",rota2$country)] <- "Peru"
# Philippines
rota2$country2[grep("hilippines",rota2$country)] <- "Philippines"
# Poland
rota2$country2[grep("oland",rota2$country)] <- "Poland"
# Portugal
rota2$country2[grep("ortugal",rota2$country)] <- "Portugal"
# Reunion
rota2$country2[grep("eunion",rota2$country)] <- "Reunion"
# Russia
rota2$country2[grep("ussia",rota2$country)] <- "Russia"
rota2$country2[grep("RUS",rota2$organism)] <- "Russia"
# Sao Tome and Principe
rota2$country2[grep("rincipe",rota2$country)] <- "Sao Tome and Principe"
# Saudi Arabia
rota2$country2[grep("audi",rota2$country)] <- "Saudi Arabia"
# Senegal
rota2$country2[grep("enegal",rota2$country)] <- "Senegal"
# Sierra Leone
rota2$country2[grep("ierra",rota2$country)] <- "Sierra Leone"
# Slovenia
rota2$country2[grep("lovenia",rota2$country)] <- "Slovenia"
# South Africa
rota2$country2[grep("outh Africa",rota2$country)] <- "South Africa"
# South Korea
rota2$country2[grep("orea",rota2$country)] <- "South Korea"
# Spain
rota2$country2[grep("Spain",rota2$country)] <- "Spain"
# Sri Lanka
rota2$country2[grep("anka",rota2$country)] <- "Sri Lanka"
# Sudan
rota2$country2[grep("udan",rota2$country)] <- "Sudan"
# Swaziland
rota2$country2[grep("waziland",rota2$country)] <- "Swaziland"
# Sweden
rota2$country2[grep("weden",rota2$country)] <- "Sweden"
# Taiwan
rota2$country2[grep("aiwan",rota2$country)] <- "Taiwan"
rota2$country2[grep("aiwan",rota2$note)] <- "Taiwan"
# Tanzania
rota2$country2[grep("anzania",rota2$country)] <- "Tanzania"
# Thailand
rota2$country2[grep("hailand",rota2$country)] <- "Thailand"
# Togo
rota2$country2[grep("Togo",rota2$country)] <- "Togo"
# Tunisia
rota2$country2[grep("unisia",rota2$country)] <- "Tunisia"
# Turkey
rota2$country2[grep("urkey",rota2$country)] <- "Turkey"
# Uganda
rota2$country2[grep("ganda",rota2$country)] <- "Uganda"
# United Kingdom
rota2$country2[grep("King",rota2$country)] <- "United Kingdom"
rota2$country2[grep("reland",rota2$country)] <- "United Kingdom"
# Uruguay
rota2$country2[grep("ruguay",rota2$country)] <- "Uruguay"
# USA
rota2$country2[grep("USA",rota2$country)] <- "USA"
rota2$country2[grep("USA",rota2$organism)] <- "USA"
rota2$country2[grep("USA",rota2$strain)] <- "USA"
rota2$country2[grep("bama",rota2$organism)] <- "USA"
rota2$country2[grep("SEP-",rota2$organism)] <- "USA"
rota2$country2[grep("U.S.",rota2$note)] <- "USA"
# Venezuela
rota2$country2[grep("enezuela",rota2$country)] <- "Venezuela"
# Vietnam
rota2$country2[grep("iet",rota2$country)] <- "Vietnam"
# Yemen
rota2$country2[grep("emen",rota2$country)] <- "Yemen"
# Zambia
rota2$country2[grep("Zambia",rota2$country)] <- "Zambia"
# Zimbabwe
rota2$country2[grep("imbab",rota2$country)] <- "Zimbabwe"
# COLLECTION DATE ####
# for testing
# table(rota2$collection_date[grep("^\\d{4}$",rota2$collection_date)],exclude=NULL)
# table(rota2$collection_date[grep("\\-\\d{4}$",rota2$collection_date)],exclude=NULL)
# properly formatted
# year only
# rota2$collection_date2[grep("^\\d{4}$",rota2$collection_date)]<- rota2$collection_date[grep("^\\d{4}$",rota2$collection_date)]
# year + month and date
# rota2$collection_date2[grep("\\-\\d{4}$",rota2$collection_date)]<- rota2$collection_date[grep("\\-\\d{4}$",rota2$collection_date)]
# grabbing for year, month, date separately
# year
rota2$year <- "XXXX"
y <- 1958
while (y < 2017)
{
rota2$year[grep(y,rota2$organism)] <- paste(y)
rota2$year[grep(y,rota2$note)] <- paste(y) # if a range is given, it will take the END year
rota2$year[grep(y,rota2$host)] <- paste(y)
rota2$year[grep(y,rota2$collection_date)] <- paste(y)
y=y+1
}
#table(rota2$year)
# month
rota2$month <- "XX"
rota2$month[grep("Jan",ignore.case = TRUE,rota2$collection_date)]<- "01"
rota2$month[grep("Feb",ignore.case = TRUE,rota2$collection_date)]<- "02"
rota2$month[grep("Mar",ignore.case = TRUE,rota2$collection_date)]<- "03"
rota2$month[grep("Apr",ignore.case = TRUE,rota2$collection_date)]<- "04"
rota2$month[grep("May",ignore.case = TRUE,rota2$collection_date)]<- "05"
rota2$month[grep("Jun",ignore.case = TRUE,rota2$collection_date)]<- "06"
rota2$month[grep("Jul",ignore.case = TRUE,rota2$collection_date)]<- "07"
rota2$month[grep("Aug",ignore.case = TRUE,rota2$collection_date)]<- "08"
rota2$month[grep("Sep",ignore.case = TRUE,rota2$collection_date)]<- "09"
rota2$month[grep("Oct",ignore.case = TRUE,rota2$collection_date)]<- "10"
rota2$month[grep("Nov",ignore.case = TRUE,rota2$collection_date)]<- "11"
rota2$month[grep("Dec",ignore.case = TRUE,rota2$collection_date)]<- "12"
rota2$month[grep("^\\d{4}-01",rota2$collection_date)]<- "01"
rota2$month[grep("^\\d{4}-02",rota2$collection_date)]<- "02"
rota2$month[grep("^\\d{4}-03",rota2$collection_date)]<- "03"
rota2$month[grep("^\\d{4}-04",rota2$collection_date)]<- "04"
rota2$month[grep("^\\d{4}-05",rota2$collection_date)]<- "05"
rota2$month[grep("^\\d{4}-06",rota2$collection_date)]<- "06"
rota2$month[grep("^\\d{4}-07",rota2$collection_date)]<- "07"
rota2$month[grep("^\\d{4}-08",rota2$collection_date)]<- "08"
rota2$month[grep("^\\d{4}-09",rota2$collection_date)]<- "09"
rota2$month[grep("^\\d{4}-10",rota2$collection_date)]<- "10"
rota2$month[grep("^\\d{4}-11",rota2$collection_date)]<- "11"
rota2$month[grep("^\\d{4}-12",rota2$collection_date)]<- "12"
#no month found in $note (except when given as a range) or $organism
#table(rota2$month)
# date
# check for 2 formats
# table(rota2$collection_date[grep("^\\d{4}-\\d{2}-",rota2$collection_date)])
# table(rota2$collection_date[grep("^\\d{2}-",rota2$collection_date)])
# test
# table(rota2$collection_date[grep(paste("^",date2,"-",sep=""),rota2$collection_date)])
# table(rota2$collection_date[grep(paste("^\\d{4}-\\d{2}-",date2,sep=""),rota2$collection_date)])
rota2$date <- "XX"
date1 <- 1
while (date1 < 32)
{
date2 <- formatC(date1,width=2, flag="0")
rota2$date[grep(paste("^",date2,"-",sep=""),rota2$collection_date)]<- paste(date2)
rota2$date[grep(paste("^\\d{4}-\\d{2}-",date2,sep=""),rota2$collection_date)]<- paste(date2)
date1 = date1 + 1
}
#table(rota2$date)
# combining year, month, date to yyyy-mm-dd format (http://www.statmethods.net/input/dates.html)
#EXAMPLE: mydates<-as.Date(rota2$collection_date2,"%Y-%m-%d")
rota2$collection_date2<-paste(rota2$year,"-",rota2$month,"-",rota2$date,sep="")
rota2$collection_date2[grep("XXXX-XX-XX",rota2$collection_date2)]<- "NULL"
# SEGMENT ####
# copying existing valid fields
seg = 1
while (seg < 12)
{
rota2$segment2[grep(paste("^",seg,"$",sep=""),rota2$segment)]<- paste(seg)
rota2$segment2[grep(paste("RNA"," ",seg,"$",sep=""),rota2$segment)]<- paste(seg)
rota2$segment2[grep(paste("RNA",seg,"$",sep=""),rota2$segment)]<- paste(seg)
rota2$segment2[grep(paste("VP",seg,"$",sep=""),rota2$segment)]<- paste(seg)
seg = seg + 1
}
# excluded rearranged seg 11 and R suffixes; 26136 sequences with no segment data
# looking from $chromosome, $map, $isolate
chr=1
while (chr < 12)
{
#rota2$segment2[grep(paste("egment"," ",chr," ",sep=""),rota2$chromosome)]<- paste(chr)
rota2$segment2[grep(paste("egment"," ",chr,"$",sep=""),rota2$chromosome)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr," ",sep=""),rota2$chromosome)]<- paste(chr) # no new additions
#rota2$segment2[grep(paste("VP"," ",chr,"$",sep=""),rota2$chromosome)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr," ",sep=""),rota2$chromosome)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr,"$",sep=""),rota2$chromosome)]<- paste(chr)
#rota2$segment2[grep(paste("egment"," ",chr," ",sep=""),rota2$map)]<- paste(chr)
rota2$segment2[grep(paste("egment"," ", chr,"$",sep=""),rota2$map)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr," ",sep=""),rota2$map)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr,"$",sep=""),rota2$map)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr," ",sep=""),rota2$map)]<- paste(chr)
rota2$segment2[grep(paste("VP",chr,"$",sep=""),rota2$map)]<- paste(chr)
#rota2$segment2[grep(paste("egment"," ", chr," ",sep=""),rota2$isolate)]<- paste(chr)
rota2$segment2[grep(paste("egment"," ", chr,"$",sep=""),rota2$isolate)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr," ",sep=""),rota2$isolate)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr,"$",sep=""),rota2$isolate)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr," ",sep=""),rota2$isolate)]<- paste(chr)
rota2$segment2[grep(paste("VP",chr,"$",sep=""),rota2$isolate)]<- paste(chr)
rota2$segment2[grep(paste("\\(\\VP",chr,sep=""),rota2$isolate)]<- paste(chr)
#rota2$segment2[grep(paste("VP"," ",chr," ",sep=""),rota2$note)]<- paste(chr) # not good criteria, same with "egment"
#rota2$segment2[grep(paste("VP"," ",chr,"$",sep=""),rota2$note)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr," ",sep=""),rota2$note)]<- paste(chr)
#rota2$segment2[grep(paste("VP",chr,"$",sep=""),rota2$note)]<- paste(chr)
chr = chr + 1
}
table(rota2$segment2)
# SPECIES ####
# A to H
# data in $organism, $note, $serogroup
sp = 1
while (sp < 9)
{
rota2$organism2[grep(paste("virus"," ",LETTERS[sp]," ", sep=""),rota2$organism)] <- paste(LETTERS[sp])
rota2$organism2[grep(paste("virus"," ",LETTERS[sp],"$", sep=""),rota2$organism)] <- paste(LETTERS[sp])
rota2$organism2[grep(paste("virus"," ",LETTERS[sp]," ", sep=""),rota2$note)] <- paste(LETTERS[sp])
rota2$organism2[grep(paste("virus"," ",LETTERS[sp],"$", sep=""),rota2$note)] <- paste(LETTERS[sp])
rota2$organism2[grep(paste("virus"," ",LETTERS[sp]," ", sep=""),rota2$serogroup)] <- paste(LETTERS[sp])
rota2$organism2[grep(paste("virus"," ",LETTERS[sp],"$", sep=""),rota2$serogroup)] <- paste(LETTERS[sp])
sp = sp + 1
}
# STRAIN ####
# serotypes come in either P, G or a mixture of both (http://onlinelibrary.wiley.com/doi/10.1002/rmv.448/epdf)
# VP7 determines the G-type strain of the virus (glycoprotein); VP4 serotype is designated as P (protease)
# G and P antigens segregate independently
# 14 (or 15) rotavirus G serotypes and 11 (or 14) rotavirus P serotypes (2011; http://www.jhpn.net/index.php/jhpn/article/viewFile/33/22)
# data in $serotype, $organism, $strain
# to check: P1: serotype; P[1]: genotype?? genotypes for P = 23, serotypes for P = 14; way more in data
# G only
str = 1
while (str < 16)
{
rota2$strain2[grep(paste("G",str,"$",sep=""),rota2$strain)]<- paste("G",str,"P[X]",sep="")
rota2$strain2[grep(paste("G",str,"_",sep=""),rota2$strain)]<- paste("G",str,"P[X]",sep="")
rota2$strain2[grep(paste("^G",str,"$",sep=""),rota2$serotype)]<- paste("G",str,"P[X]",sep="")
str = str + 1
}
# GXP[X]
rota2$strain2[grep(paste("GXP[X]"),rota2$strain, fixed = TRUE)] <- paste("GXP[X]")
rota2$strain2[grep(paste("P[X]GX"),rota2$strain, fixed = TRUE)] <- paste("GXP[X]")
rota2$strain2[grep(paste("GXP[X]"),rota2$serotype, fixed = TRUE)] <- paste("GXP[X]")
rota2$strain2[grep(paste("P[X]GX"),rota2$serotype, fixed = TRUE)] <- paste("GXP[X]")
rota2$strain2[grep(paste("GXP[X]"),rota2$serogroup, fixed = TRUE)] <- paste("GXP[X]")
rota2$strain2[grep(paste("P[X]GX"),rota2$serogroup, fixed = TRUE)] <- paste("GXP[X]")
# G and P combinations
g=1
p=1
while (g < 16)
{
while (p < 30)
{
rota2$strain2[grep(paste("G",g,"P",p,sep=""),rota2$strain)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G",g,"P","[",p,sep=""),rota2$strain, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G",g,sep=""),rota2$strain)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G",g,sep=""),rota2$strain, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P",p,sep=""),rota2$strain)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P","[",p,sep=""),rota2$strain, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G","X",sep=""),rota2$strain)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G","X",sep=""),rota2$strain, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("G",g,"P",p,sep=""),rota2$serotype)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G",g,"P","[",p,sep=""),rota2$serotype, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G",g,sep=""),rota2$serotype)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G",g,sep=""),rota2$serotype, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P",p,sep=""),rota2$serotype)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P","[",p,sep=""),rota2$serotype, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G","X",sep=""),rota2$serotype)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G","X",sep=""),rota2$serotype, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("G",g,"P",p,sep=""),rota2$serogroup)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G",g,"P","[",p,sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G",g,sep=""),rota2$serogroup)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G",g,sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G",g,"P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P",p,sep=""),rota2$serogroup)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("G","X","P","[",p,sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P",p,"G","X",sep=""),rota2$serogroup)] <- paste("G","X","P[",p,"]",sep="")
rota2$strain2[grep(paste("P","[",p,"]","G","X",sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G","X","P[",p,"]",sep="")
p = p + 1
}
rota2$strain2[grep(paste("G",g,"P","X",sep=""),rota2$strain)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("G",g,"P","[","X",sep=""),rota2$strain, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","X","G",g,sep=""),rota2$strain)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","[","X","]","G",g,sep=""),rota2$strain, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("G",g,"P","X",sep=""),rota2$serotype)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("G",g,"P","[","X",sep=""),rota2$serotype, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","X","G",g,sep=""),rota2$serotype)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","[","X","]","G",g,sep=""),rota2$serotype, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("G",g,"P","X",sep=""),rota2$serogroup)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("G",g,"P","[","X",sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","X","G",g,sep=""),rota2$serogroup)] <- paste("G",g,"P[X]",sep="")
rota2$strain2[grep(paste("P","[","X","]","G",g,sep=""),rota2$serogroup, fixed = TRUE)] <- paste("G",g,"P[X]",sep="")
p = 1 #reinitialize
g = g + 1
print (paste("nested loop:", g/16*100,"percent complete"))
}
#double digits (egG1P[11]) will overwrite single digits (G1P[1]) later
# identify mixed strains
rota2$strain2[grep("ix",rota2$strain)] <- paste("Mixed Genotype",sep="")
# SUMMARY TABLES ####
table(rota2$host2)
table(rota2$country2)
table(rota2$collection_date2)
table(rota2$segment2)
table(rota2$strain2)
table(rota2$organism2)
# SEQUENCE DATA ####
rota.seq <- read.dna("rota_sequences.fas",format="fasta",as.matrix=FALSE) #as.matrix = FALSE: always returns the sequences in a list.
# rota.seq <- read.dna("rota_sequences.fas",format="fasta",as.matrix=NULL)
match(names(rota.seq),rota2$accession)
rota2$newlabel <- paste(rota2$accession,rota2$host2, rota2$country2, rota2$collection_date2, "Rotavirus", rota2$organism2, "Strain", rota2$strain2, "Segment", rota2$segment2, sep="_")
i=1
while (i<10)
{
names(rota.seq)[i] <- rota2$newlabel[i]
i = i + 1
}
load("C:/rotavirus/01 Data Munging/.RData")
table(rota2$collection_date2)
table(rota2$date)
setwd("C:/rotavirus/14 Post Vaccine Analysis")
seq <- read.dna("VP4Arra.fixed.fas",format="fasta",as.matrix=FALSE)
library("ape")
seq <- read.dna("VP4Arra.fixed.fas",format="fasta",as.matrix=FALSE)
names(seq)[1]
i=2015
grep(i,names(seq))
grep(paste(i,"-",separator=""),names(seq))
paste(i,"-",sep="")
grep(paste(i,"-",sep=""),names(seq))
seq[grep(paste(i,"-",sep=""),names(seq))]
library("ape")
seq <- read.dna("VP4Arra.fixed.fas",format="fasta",as.matrix=FALSE)
i=2015
postvac=""
while (i > 2005)
{
postvac <- c(postvac,seq[grep(paste(i,"-",sep=""),names(seq))])
i = i - 1
}
postvac
library("ape")
seq <- read.dna("VP4Arra.fixed.fas",format="fasta",as.matrix=FALSE)
i=2015
while (i > 2005)
{
postvac <- seq[grep(paste(i,"-",sep=""),names(seq))]
write.dna(postvac, paste("VP4",i,".fas",sep="_"), format = "fasta")
i = i - 1
}
library("ape")
seq <- read.dna("VP4Arra.fixed.fas",format="fasta",as.matrix=FALSE)
i=2015
while (i > 1995)
{
postvac <- seq[grep(paste(i,"-",sep=""),names(seq))]
write.dna(postvac, paste("VP4",i,".fas",sep="_"), format = "fasta")
i = i - 1
}
bigseq <- read.dna("*.fas",format="fasta",as.matrix=FALSE)
library("ape")
seq <- read.dna("VP6Arra.fixed.fas",format="fasta",as.matrix=FALSE)
i=2015
while (i > 1995)
{
postvac <- seq[grep(paste(i,"-",sep=""),names(seq))]
write.dna(postvac, paste("VP4",i,".fas",sep="_"), format = "fasta")
i = i - 1
}
library("ape")
seq <- read.dna("VP6Arra.fixed.fas",format="fasta",as.matrix=FALSE)
i=2015
while (i > 1995)
{
postvac <- seq[grep(paste(i,"-",sep=""),names(seq))]
write.dna(postvac, paste("VP6",i,".fas",sep="_"), format = "fasta")
i = i - 1
}
library("ape")
seq <- read.dna("VP7Arra.fixed.fas",format="fasta",as.matrix=FALSE)
i=2015
while (i > 1995)
{
postvac <- seq[grep(paste(i,"-",sep=""),names(seq))]
write.dna(postvac, paste("VP7",i,".fas",sep="_"), format = "fasta")
i = i - 1
}
library("ape")
seq <- read.dna("VP4Arra.fixed.fas",format="fasta",as.matrix=FALSE)
i=2015
while (i > 1995)
{
postvac <- seq[grep(paste(i,"-",sep=""),names(seq))]
write.dna(postvac, paste("VP4",i,".fas",sep="_"), format = "fasta")
i = i - 1
}
